#! /usr/bin/perl

use warnings; use strict;
use Data::Dumper;

use lib $ENV{HOME} . '/perl5/lib/perl5'; #  look for a local::lib in ~
use lib             '../perl5/lib/perl5'; #  ... then in this repo

use FindBin;
use lib "$FindBin::Bin/../lib";

# the repo
my $init_repo           = 0; # should we create a repo if it doesn't exist 
                             # mostly only useful for testing new vesions of the script with repos in /tmp

my $repo_path;


# if you don't specify one
if (not $repo_path) {
        $repo_path = ( sort glob "/tmp/commit-spam-repo-*/"   )[-1];  # the last one, whatever.

        # ... and we didn't find a one
        if (not $repo_path) { 
            # ... create a new repo
            $repo_path = sprintf "/tmp/commit-spam-repo-%s",$$;
            $init_repo = 1;
        }
}

if ($init_repo and -d $repo_path) {
    die "can't init a repo in a path that exists"
}
if (not $init_repo and not -d $repo_path) {
    die "can't use a repo that doesn't exist"
}


use Git::Spam::Command;
my $program = Git::Spam::Command->new();
# $program->options( $value );

# set up the git repo:

use Git::Repository;
Git::Repository->run( init => $repo_path, )
    if $init_repo;

$program->repo(
    Git::Repository->new(
        work_tree => $repo_path
    )
);

exit run $program;

